// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "braft/enum.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace braft {

namespace {

const ::google::protobuf::EnumDescriptor* EntryType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ErrorType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_braft_2fenum_2eproto() {
  protobuf_AddDesc_braft_2fenum_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "braft/enum.proto");
  GOOGLE_CHECK(file != NULL);
  EntryType_descriptor_ = file->enum_type(0);
  ErrorType_descriptor_ = file->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_braft_2fenum_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

}  // namespace

void protobuf_ShutdownFile_braft_2fenum_2eproto() {
}

void protobuf_AddDesc_braft_2fenum_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020braft/enum.proto\022\005braft*l\n\tEntryType\022\026"
    "\n\022ENTRY_TYPE_UNKNOWN\020\000\022\024\n\020ENTRY_TYPE_NO_"
    "OP\020\001\022\023\n\017ENTRY_TYPE_DATA\020\002\022\034\n\030ENTRY_TYPE_"
    "CONFIGURATION\020\003*\202\001\n\tErrorType\022\023\n\017ERROR_T"
    "YPE_NONE\020\000\022\022\n\016ERROR_TYPE_LOG\020\001\022\025\n\021ERROR_"
    "TYPE_STABLE\020\002\022\027\n\023ERROR_TYPE_SNAPSHOT\020\003\022\034"
    "\n\030ERROR_TYPE_STATE_MACHINE\020\004", 268);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "braft/enum.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_braft_2fenum_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_braft_2fenum_2eproto {
  StaticDescriptorInitializer_braft_2fenum_2eproto() {
    protobuf_AddDesc_braft_2fenum_2eproto();
  }
} static_descriptor_initializer_braft_2fenum_2eproto_;

const ::google::protobuf::EnumDescriptor* EntryType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EntryType_descriptor_;
}
bool EntryType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ErrorType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ErrorType_descriptor_;
}
bool ErrorType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace braft

// @@protoc_insertion_point(global_scope)
