// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: braft/errno.proto

#ifndef PROTOBUF_braft_2ferrno_2eproto__INCLUDED
#define PROTOBUF_braft_2ferrno_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace braft {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_braft_2ferrno_2eproto();
void protobuf_AssignDesc_braft_2ferrno_2eproto();
void protobuf_ShutdownFile_braft_2ferrno_2eproto();


enum RaftError {
  ERAFTTIMEDOUT = 10001,
  ESTATEMACHINE = 10002,
  ECATCHUP = 10003,
  ELEADERREMOVED = 10004,
  ESETPEER = 10005,
  ENODESHUTDOWN = 10006,
  EHIGHERTERMREQUEST = 10007,
  EHIGHERTERMRESPONSE = 10008,
  EBADNODE = 10009,
  EVOTEFORCANDIDATE = 10010,
  ENEWLEADER = 10011,
  ELEADERCONFLICT = 10012,
  ETRANSFERLEADERSHIP = 10013,
  ELOGDELETED = 10014,
  ENOMOREUSERLOG = 10015,
  EREADONLY = 10016
};
bool RaftError_IsValid(int value);
const RaftError RaftError_MIN = ERAFTTIMEDOUT;
const RaftError RaftError_MAX = EREADONLY;
const int RaftError_ARRAYSIZE = RaftError_MAX + 1;

const ::google::protobuf::EnumDescriptor* RaftError_descriptor();
inline const ::std::string& RaftError_Name(RaftError value) {
  return ::google::protobuf::internal::NameOfEnum(
    RaftError_descriptor(), value);
}
inline bool RaftError_Parse(
    const ::std::string& name, RaftError* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RaftError>(
    RaftError_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================


// @@protoc_insertion_point(namespace_scope)

}  // namespace braft

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< braft::RaftError>() {
  return braft::RaftError_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_braft_2ferrno_2eproto__INCLUDED
