// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: braft/local_storage.proto

#ifndef PROTOBUF_braft_2flocal_5fstorage_2eproto__INCLUDED
#define PROTOBUF_braft_2flocal_5fstorage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "braft/raft.pb.h"
#include "braft/local_file_meta.pb.h"
// @@protoc_insertion_point(includes)

namespace braft {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_braft_2flocal_5fstorage_2eproto();
void protobuf_AssignDesc_braft_2flocal_5fstorage_2eproto();
void protobuf_ShutdownFile_braft_2flocal_5fstorage_2eproto();

class ConfigurationPBMeta;
class LogPBMeta;
class StablePBMeta;
class LocalSnapshotPbMeta;
class LocalSnapshotPbMeta_File;

// ===================================================================

class ConfigurationPBMeta : public ::google::protobuf::Message {
 public:
  ConfigurationPBMeta();
  virtual ~ConfigurationPBMeta();
  
  ConfigurationPBMeta(const ConfigurationPBMeta& from);
  
  inline ConfigurationPBMeta& operator=(const ConfigurationPBMeta& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigurationPBMeta& default_instance();
  
  void Swap(ConfigurationPBMeta* other);
  
  // implements Message ----------------------------------------------
  
  ConfigurationPBMeta* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConfigurationPBMeta& from);
  void MergeFrom(const ConfigurationPBMeta& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated string peers = 1;
  inline int peers_size() const;
  inline void clear_peers();
  static const int kPeersFieldNumber = 1;
  inline const ::std::string& peers(int index) const;
  inline ::std::string* mutable_peers(int index);
  inline void set_peers(int index, const ::std::string& value);
  inline void set_peers(int index, const char* value);
  inline void set_peers(int index, const char* value, size_t size);
  inline ::std::string* add_peers();
  inline void add_peers(const ::std::string& value);
  inline void add_peers(const char* value);
  inline void add_peers(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& peers() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_peers();
  
  // repeated string old_peers = 2;
  inline int old_peers_size() const;
  inline void clear_old_peers();
  static const int kOldPeersFieldNumber = 2;
  inline const ::std::string& old_peers(int index) const;
  inline ::std::string* mutable_old_peers(int index);
  inline void set_old_peers(int index, const ::std::string& value);
  inline void set_old_peers(int index, const char* value);
  inline void set_old_peers(int index, const char* value, size_t size);
  inline ::std::string* add_old_peers();
  inline void add_old_peers(const ::std::string& value);
  inline void add_old_peers(const char* value);
  inline void add_old_peers(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& old_peers() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_old_peers();
  
  // @@protoc_insertion_point(class_scope:braft.ConfigurationPBMeta)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::std::string> peers_;
  ::google::protobuf::RepeatedPtrField< ::std::string> old_peers_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_braft_2flocal_5fstorage_2eproto();
  friend void protobuf_AssignDesc_braft_2flocal_5fstorage_2eproto();
  friend void protobuf_ShutdownFile_braft_2flocal_5fstorage_2eproto();
  
  void InitAsDefaultInstance();
  static ConfigurationPBMeta* default_instance_;
};
// -------------------------------------------------------------------

class LogPBMeta : public ::google::protobuf::Message {
 public:
  LogPBMeta();
  virtual ~LogPBMeta();
  
  LogPBMeta(const LogPBMeta& from);
  
  inline LogPBMeta& operator=(const LogPBMeta& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const LogPBMeta& default_instance();
  
  void Swap(LogPBMeta* other);
  
  // implements Message ----------------------------------------------
  
  LogPBMeta* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LogPBMeta& from);
  void MergeFrom(const LogPBMeta& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int64 first_log_index = 1;
  inline bool has_first_log_index() const;
  inline void clear_first_log_index();
  static const int kFirstLogIndexFieldNumber = 1;
  inline ::google::protobuf::int64 first_log_index() const;
  inline void set_first_log_index(::google::protobuf::int64 value);
  
  // optional int64 last_log_index = 2;
  inline bool has_last_log_index() const;
  inline void clear_last_log_index();
  static const int kLastLogIndexFieldNumber = 2;
  inline ::google::protobuf::int64 last_log_index() const;
  inline void set_last_log_index(::google::protobuf::int64 value);
  
  // @@protoc_insertion_point(class_scope:braft.LogPBMeta)
 private:
  inline void set_has_first_log_index();
  inline void clear_has_first_log_index();
  inline void set_has_last_log_index();
  inline void clear_has_last_log_index();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 first_log_index_;
  ::google::protobuf::int64 last_log_index_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_braft_2flocal_5fstorage_2eproto();
  friend void protobuf_AssignDesc_braft_2flocal_5fstorage_2eproto();
  friend void protobuf_ShutdownFile_braft_2flocal_5fstorage_2eproto();
  
  void InitAsDefaultInstance();
  static LogPBMeta* default_instance_;
};
// -------------------------------------------------------------------

class StablePBMeta : public ::google::protobuf::Message {
 public:
  StablePBMeta();
  virtual ~StablePBMeta();
  
  StablePBMeta(const StablePBMeta& from);
  
  inline StablePBMeta& operator=(const StablePBMeta& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const StablePBMeta& default_instance();
  
  void Swap(StablePBMeta* other);
  
  // implements Message ----------------------------------------------
  
  StablePBMeta* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StablePBMeta& from);
  void MergeFrom(const StablePBMeta& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int64 term = 1;
  inline bool has_term() const;
  inline void clear_term();
  static const int kTermFieldNumber = 1;
  inline ::google::protobuf::int64 term() const;
  inline void set_term(::google::protobuf::int64 value);
  
  // required string votedfor = 2;
  inline bool has_votedfor() const;
  inline void clear_votedfor();
  static const int kVotedforFieldNumber = 2;
  inline const ::std::string& votedfor() const;
  inline void set_votedfor(const ::std::string& value);
  inline void set_votedfor(const char* value);
  inline void set_votedfor(const char* value, size_t size);
  inline ::std::string* mutable_votedfor();
  inline ::std::string* release_votedfor();
  
  // @@protoc_insertion_point(class_scope:braft.StablePBMeta)
 private:
  inline void set_has_term();
  inline void clear_has_term();
  inline void set_has_votedfor();
  inline void clear_has_votedfor();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 term_;
  ::std::string* votedfor_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_braft_2flocal_5fstorage_2eproto();
  friend void protobuf_AssignDesc_braft_2flocal_5fstorage_2eproto();
  friend void protobuf_ShutdownFile_braft_2flocal_5fstorage_2eproto();
  
  void InitAsDefaultInstance();
  static StablePBMeta* default_instance_;
};
// -------------------------------------------------------------------

class LocalSnapshotPbMeta_File : public ::google::protobuf::Message {
 public:
  LocalSnapshotPbMeta_File();
  virtual ~LocalSnapshotPbMeta_File();
  
  LocalSnapshotPbMeta_File(const LocalSnapshotPbMeta_File& from);
  
  inline LocalSnapshotPbMeta_File& operator=(const LocalSnapshotPbMeta_File& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const LocalSnapshotPbMeta_File& default_instance();
  
  void Swap(LocalSnapshotPbMeta_File* other);
  
  // implements Message ----------------------------------------------
  
  LocalSnapshotPbMeta_File* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LocalSnapshotPbMeta_File& from);
  void MergeFrom(const LocalSnapshotPbMeta_File& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // optional .braft.LocalFileMeta meta = 2;
  inline bool has_meta() const;
  inline void clear_meta();
  static const int kMetaFieldNumber = 2;
  inline const ::braft::LocalFileMeta& meta() const;
  inline ::braft::LocalFileMeta* mutable_meta();
  inline ::braft::LocalFileMeta* release_meta();
  
  // @@protoc_insertion_point(class_scope:braft.LocalSnapshotPbMeta.File)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_meta();
  inline void clear_has_meta();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* name_;
  ::braft::LocalFileMeta* meta_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_braft_2flocal_5fstorage_2eproto();
  friend void protobuf_AssignDesc_braft_2flocal_5fstorage_2eproto();
  friend void protobuf_ShutdownFile_braft_2flocal_5fstorage_2eproto();
  
  void InitAsDefaultInstance();
  static LocalSnapshotPbMeta_File* default_instance_;
};
// -------------------------------------------------------------------

class LocalSnapshotPbMeta : public ::google::protobuf::Message {
 public:
  LocalSnapshotPbMeta();
  virtual ~LocalSnapshotPbMeta();
  
  LocalSnapshotPbMeta(const LocalSnapshotPbMeta& from);
  
  inline LocalSnapshotPbMeta& operator=(const LocalSnapshotPbMeta& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const LocalSnapshotPbMeta& default_instance();
  
  void Swap(LocalSnapshotPbMeta* other);
  
  // implements Message ----------------------------------------------
  
  LocalSnapshotPbMeta* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LocalSnapshotPbMeta& from);
  void MergeFrom(const LocalSnapshotPbMeta& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef LocalSnapshotPbMeta_File File;
  
  // accessors -------------------------------------------------------
  
  // optional .braft.SnapshotMeta meta = 1;
  inline bool has_meta() const;
  inline void clear_meta();
  static const int kMetaFieldNumber = 1;
  inline const ::braft::SnapshotMeta& meta() const;
  inline ::braft::SnapshotMeta* mutable_meta();
  inline ::braft::SnapshotMeta* release_meta();
  
  // repeated .braft.LocalSnapshotPbMeta.File files = 2;
  inline int files_size() const;
  inline void clear_files();
  static const int kFilesFieldNumber = 2;
  inline const ::braft::LocalSnapshotPbMeta_File& files(int index) const;
  inline ::braft::LocalSnapshotPbMeta_File* mutable_files(int index);
  inline ::braft::LocalSnapshotPbMeta_File* add_files();
  inline const ::google::protobuf::RepeatedPtrField< ::braft::LocalSnapshotPbMeta_File >&
      files() const;
  inline ::google::protobuf::RepeatedPtrField< ::braft::LocalSnapshotPbMeta_File >*
      mutable_files();
  
  // @@protoc_insertion_point(class_scope:braft.LocalSnapshotPbMeta)
 private:
  inline void set_has_meta();
  inline void clear_has_meta();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::braft::SnapshotMeta* meta_;
  ::google::protobuf::RepeatedPtrField< ::braft::LocalSnapshotPbMeta_File > files_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_braft_2flocal_5fstorage_2eproto();
  friend void protobuf_AssignDesc_braft_2flocal_5fstorage_2eproto();
  friend void protobuf_ShutdownFile_braft_2flocal_5fstorage_2eproto();
  
  void InitAsDefaultInstance();
  static LocalSnapshotPbMeta* default_instance_;
};
// ===================================================================


// ===================================================================

// ConfigurationPBMeta

// repeated string peers = 1;
inline int ConfigurationPBMeta::peers_size() const {
  return peers_.size();
}
inline void ConfigurationPBMeta::clear_peers() {
  peers_.Clear();
}
inline const ::std::string& ConfigurationPBMeta::peers(int index) const {
  return peers_.Get(index);
}
inline ::std::string* ConfigurationPBMeta::mutable_peers(int index) {
  return peers_.Mutable(index);
}
inline void ConfigurationPBMeta::set_peers(int index, const ::std::string& value) {
  peers_.Mutable(index)->assign(value);
}
inline void ConfigurationPBMeta::set_peers(int index, const char* value) {
  peers_.Mutable(index)->assign(value);
}
inline void ConfigurationPBMeta::set_peers(int index, const char* value, size_t size) {
  peers_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ConfigurationPBMeta::add_peers() {
  return peers_.Add();
}
inline void ConfigurationPBMeta::add_peers(const ::std::string& value) {
  peers_.Add()->assign(value);
}
inline void ConfigurationPBMeta::add_peers(const char* value) {
  peers_.Add()->assign(value);
}
inline void ConfigurationPBMeta::add_peers(const char* value, size_t size) {
  peers_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ConfigurationPBMeta::peers() const {
  return peers_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ConfigurationPBMeta::mutable_peers() {
  return &peers_;
}

// repeated string old_peers = 2;
inline int ConfigurationPBMeta::old_peers_size() const {
  return old_peers_.size();
}
inline void ConfigurationPBMeta::clear_old_peers() {
  old_peers_.Clear();
}
inline const ::std::string& ConfigurationPBMeta::old_peers(int index) const {
  return old_peers_.Get(index);
}
inline ::std::string* ConfigurationPBMeta::mutable_old_peers(int index) {
  return old_peers_.Mutable(index);
}
inline void ConfigurationPBMeta::set_old_peers(int index, const ::std::string& value) {
  old_peers_.Mutable(index)->assign(value);
}
inline void ConfigurationPBMeta::set_old_peers(int index, const char* value) {
  old_peers_.Mutable(index)->assign(value);
}
inline void ConfigurationPBMeta::set_old_peers(int index, const char* value, size_t size) {
  old_peers_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ConfigurationPBMeta::add_old_peers() {
  return old_peers_.Add();
}
inline void ConfigurationPBMeta::add_old_peers(const ::std::string& value) {
  old_peers_.Add()->assign(value);
}
inline void ConfigurationPBMeta::add_old_peers(const char* value) {
  old_peers_.Add()->assign(value);
}
inline void ConfigurationPBMeta::add_old_peers(const char* value, size_t size) {
  old_peers_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ConfigurationPBMeta::old_peers() const {
  return old_peers_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ConfigurationPBMeta::mutable_old_peers() {
  return &old_peers_;
}

// -------------------------------------------------------------------

// LogPBMeta

// required int64 first_log_index = 1;
inline bool LogPBMeta::has_first_log_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LogPBMeta::set_has_first_log_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LogPBMeta::clear_has_first_log_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LogPBMeta::clear_first_log_index() {
  first_log_index_ = GOOGLE_LONGLONG(0);
  clear_has_first_log_index();
}
inline ::google::protobuf::int64 LogPBMeta::first_log_index() const {
  return first_log_index_;
}
inline void LogPBMeta::set_first_log_index(::google::protobuf::int64 value) {
  set_has_first_log_index();
  first_log_index_ = value;
}

// optional int64 last_log_index = 2;
inline bool LogPBMeta::has_last_log_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LogPBMeta::set_has_last_log_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LogPBMeta::clear_has_last_log_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LogPBMeta::clear_last_log_index() {
  last_log_index_ = GOOGLE_LONGLONG(0);
  clear_has_last_log_index();
}
inline ::google::protobuf::int64 LogPBMeta::last_log_index() const {
  return last_log_index_;
}
inline void LogPBMeta::set_last_log_index(::google::protobuf::int64 value) {
  set_has_last_log_index();
  last_log_index_ = value;
}

// -------------------------------------------------------------------

// StablePBMeta

// required int64 term = 1;
inline bool StablePBMeta::has_term() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StablePBMeta::set_has_term() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StablePBMeta::clear_has_term() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StablePBMeta::clear_term() {
  term_ = GOOGLE_LONGLONG(0);
  clear_has_term();
}
inline ::google::protobuf::int64 StablePBMeta::term() const {
  return term_;
}
inline void StablePBMeta::set_term(::google::protobuf::int64 value) {
  set_has_term();
  term_ = value;
}

// required string votedfor = 2;
inline bool StablePBMeta::has_votedfor() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StablePBMeta::set_has_votedfor() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StablePBMeta::clear_has_votedfor() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StablePBMeta::clear_votedfor() {
  if (votedfor_ != &::google::protobuf::internal::kEmptyString) {
    votedfor_->clear();
  }
  clear_has_votedfor();
}
inline const ::std::string& StablePBMeta::votedfor() const {
  return *votedfor_;
}
inline void StablePBMeta::set_votedfor(const ::std::string& value) {
  set_has_votedfor();
  if (votedfor_ == &::google::protobuf::internal::kEmptyString) {
    votedfor_ = new ::std::string;
  }
  votedfor_->assign(value);
}
inline void StablePBMeta::set_votedfor(const char* value) {
  set_has_votedfor();
  if (votedfor_ == &::google::protobuf::internal::kEmptyString) {
    votedfor_ = new ::std::string;
  }
  votedfor_->assign(value);
}
inline void StablePBMeta::set_votedfor(const char* value, size_t size) {
  set_has_votedfor();
  if (votedfor_ == &::google::protobuf::internal::kEmptyString) {
    votedfor_ = new ::std::string;
  }
  votedfor_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* StablePBMeta::mutable_votedfor() {
  set_has_votedfor();
  if (votedfor_ == &::google::protobuf::internal::kEmptyString) {
    votedfor_ = new ::std::string;
  }
  return votedfor_;
}
inline ::std::string* StablePBMeta::release_votedfor() {
  clear_has_votedfor();
  if (votedfor_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = votedfor_;
    votedfor_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// LocalSnapshotPbMeta_File

// required string name = 1;
inline bool LocalSnapshotPbMeta_File::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LocalSnapshotPbMeta_File::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LocalSnapshotPbMeta_File::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LocalSnapshotPbMeta_File::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& LocalSnapshotPbMeta_File::name() const {
  return *name_;
}
inline void LocalSnapshotPbMeta_File::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void LocalSnapshotPbMeta_File::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void LocalSnapshotPbMeta_File::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LocalSnapshotPbMeta_File::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* LocalSnapshotPbMeta_File::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional .braft.LocalFileMeta meta = 2;
inline bool LocalSnapshotPbMeta_File::has_meta() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LocalSnapshotPbMeta_File::set_has_meta() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LocalSnapshotPbMeta_File::clear_has_meta() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LocalSnapshotPbMeta_File::clear_meta() {
  if (meta_ != NULL) meta_->::braft::LocalFileMeta::Clear();
  clear_has_meta();
}
inline const ::braft::LocalFileMeta& LocalSnapshotPbMeta_File::meta() const {
  return meta_ != NULL ? *meta_ : *default_instance_->meta_;
}
inline ::braft::LocalFileMeta* LocalSnapshotPbMeta_File::mutable_meta() {
  set_has_meta();
  if (meta_ == NULL) meta_ = new ::braft::LocalFileMeta;
  return meta_;
}
inline ::braft::LocalFileMeta* LocalSnapshotPbMeta_File::release_meta() {
  clear_has_meta();
  ::braft::LocalFileMeta* temp = meta_;
  meta_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// LocalSnapshotPbMeta

// optional .braft.SnapshotMeta meta = 1;
inline bool LocalSnapshotPbMeta::has_meta() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LocalSnapshotPbMeta::set_has_meta() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LocalSnapshotPbMeta::clear_has_meta() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LocalSnapshotPbMeta::clear_meta() {
  if (meta_ != NULL) meta_->::braft::SnapshotMeta::Clear();
  clear_has_meta();
}
inline const ::braft::SnapshotMeta& LocalSnapshotPbMeta::meta() const {
  return meta_ != NULL ? *meta_ : *default_instance_->meta_;
}
inline ::braft::SnapshotMeta* LocalSnapshotPbMeta::mutable_meta() {
  set_has_meta();
  if (meta_ == NULL) meta_ = new ::braft::SnapshotMeta;
  return meta_;
}
inline ::braft::SnapshotMeta* LocalSnapshotPbMeta::release_meta() {
  clear_has_meta();
  ::braft::SnapshotMeta* temp = meta_;
  meta_ = NULL;
  return temp;
}

// repeated .braft.LocalSnapshotPbMeta.File files = 2;
inline int LocalSnapshotPbMeta::files_size() const {
  return files_.size();
}
inline void LocalSnapshotPbMeta::clear_files() {
  files_.Clear();
}
inline const ::braft::LocalSnapshotPbMeta_File& LocalSnapshotPbMeta::files(int index) const {
  return files_.Get(index);
}
inline ::braft::LocalSnapshotPbMeta_File* LocalSnapshotPbMeta::mutable_files(int index) {
  return files_.Mutable(index);
}
inline ::braft::LocalSnapshotPbMeta_File* LocalSnapshotPbMeta::add_files() {
  return files_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::braft::LocalSnapshotPbMeta_File >&
LocalSnapshotPbMeta::files() const {
  return files_;
}
inline ::google::protobuf::RepeatedPtrField< ::braft::LocalSnapshotPbMeta_File >*
LocalSnapshotPbMeta::mutable_files() {
  return &files_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace braft

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_braft_2flocal_5fstorage_2eproto__INCLUDED
