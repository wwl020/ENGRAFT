// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "brpc/errno.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace brpc {

namespace {

const ::google::protobuf::EnumDescriptor* Errno_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_brpc_2ferrno_2eproto() {
  protobuf_AddDesc_brpc_2ferrno_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "brpc/errno.proto");
  GOOGLE_CHECK(file != NULL);
  Errno_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_brpc_2ferrno_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

}  // namespace

void protobuf_ShutdownFile_brpc_2ferrno_2eproto() {
}

void protobuf_AddDesc_brpc_2ferrno_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020brpc/errno.proto\022\004brpc*\223\003\n\005Errno\022\017\n\nEN"
    "OSERVICE\020\351\007\022\016\n\tENOMETHOD\020\352\007\022\r\n\010EREQUEST\020"
    "\353\007\022\r\n\010ERPCAUTH\020\354\007\022\022\n\rETOOMANYFAILS\020\355\007\022\021\n"
    "\014EPCHANFINISH\020\356\007\022\023\n\016EBACKUPREQUEST\020\357\007\022\021\n"
    "\014ERPCTIMEDOUT\020\360\007\022\022\n\rEFAILEDSOCKET\020\361\007\022\n\n\005"
    "EHTTP\020\362\007\022\021\n\014EOVERCROWDED\020\363\007\022\025\n\020ERTMPPUBL"
    "ISHABLE\020\364\007\022\026\n\021ERTMPCREATESTREAM\020\365\007\022\t\n\004EE"
    "OF\020\366\007\022\014\n\007EUNUSED\020\367\007\022\t\n\004ESSL\020\370\007\022\025\n\020EH2RUN"
    "OUTSTREAMS\020\371\007\022\014\n\007EREJECT\020\372\007\022\016\n\tEINTERNAL"
    "\020\321\017\022\016\n\tERESPONSE\020\322\017\022\014\n\007ELOGOFF\020\323\017\022\013\n\006ELI"
    "MIT\020\324\017\022\013\n\006ECLOSE\020\325\017\022\t\n\004EITP\020\326\017B\031\n\010com.br"
    "pcB\rBaiduRpcErrno", 457);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "brpc/errno.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_brpc_2ferrno_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_brpc_2ferrno_2eproto {
  StaticDescriptorInitializer_brpc_2ferrno_2eproto() {
    protobuf_AddDesc_brpc_2ferrno_2eproto();
  }
} static_descriptor_initializer_brpc_2ferrno_2eproto_;

const ::google::protobuf::EnumDescriptor* Errno_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Errno_descriptor_;
}
bool Errno_IsValid(int value) {
  switch(value) {
    case 1001:
    case 1002:
    case 1003:
    case 1004:
    case 1005:
    case 1006:
    case 1007:
    case 1008:
    case 1009:
    case 1010:
    case 1011:
    case 1012:
    case 1013:
    case 1014:
    case 1015:
    case 1016:
    case 1017:
    case 1018:
    case 2001:
    case 2002:
    case 2003:
    case 2004:
    case 2005:
    case 2006:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace brpc

// @@protoc_insertion_point(global_scope)
